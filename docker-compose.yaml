version: '3.7'

volumes:
  kong_data: {}
  konga_data: {}

networks:
  kong-net:
    external: false

services:
  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    container_name: kong-database
    image: postgres:9.6
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_USER: kong
      POSTGRES_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password # seem like POSTGRES_PASSWORD: 
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - ./kong_data:/var/lib/postgresql/data

  #######################################
  # Kong database migrations
  #######################################
  kong-migrations:
    container_name: kong-migrations
    image: kong:2.0
    command: kong migrations bootstrap -v # kong migrations bootstrap only once in the entire lifecycle of a database for Kong
  # for upgrade
    # command: kong migrations up -v
    # command: kong migrations finish -v
    networks:
      - kong-net
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    container_name: kong
    user: "${KONG_USER:-kong}"
    image: kong:2.0 # specific stable version
    networks:
      - kong-net
    depends_on:
      - kong-database
    user: root
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      - KONG_DATABASE=postgres # database engine
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=${KONG_PG_DATABASE:-kong}
      - KONG_PG_USER=${KONG_PG_USER:-kong}
      - KONG_PG_PASSWORD_FILE=/run/secrets/kong_postgres_password
      - KONG_PROXY_LISTEN=0.0.0.0:80, 0.0.0.0:443 ssl http2
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_NGINX_HTTP_RESOLVER=8.8.8.8
      - KONG_NGINX_PROXY_LUA_SSL_TRUSTED_CERTIFICATE=/etc/ssl/certs/ca-certificates.crt

    # ERROR_LOG
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
    # ACCESS_LOG
      - KONG_PROXY_ACCESS_LOG=/dev/null # disable access log improve little speed and don't save file on storage
      - KONG_ADMIN_ACCESS_LOG=/dev/null # disable access log

      - KONG_TRUSTED_IPS=0.0.0.0/0,::/0 # Real IP, X-Real-IP
      - KONG_REAL_IP_RECURSIVE=on # Real IP, X-Real-IP
    # PLUGINS
      - KONG_PLUGINS=bundled,hello
    # lua_package_path = /path/to/plugin1/?.lua;/path/to/plugin2/?.lua;;
      - KONG_LUA_PACKAGE_PATH=/etc/kong/plugins/hello/?.lua;;

      - KONG_LOG_LEVEL=debug # check PLUGINS load fail or success

    secrets:
      - kong_postgres_password
    ports:
      - "80:80"
      - "443:443"
      - "127.0.0.1:8001:8001"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - ./plugins/hello:/etc/kong/plugins/hello

  #######################################
  # Konga database prepare
  #######################################
  konga-database:
    container_name: konga-database
    image: mongo:4.4.0
    networks:
      - kong-net
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    # environment:
      # MONGO_INITDB_DATABASE: ${KONG_MONGO_DATABASE:-konga}
      # MONGO_INITDB_ROOT_USERNAME: ${KONG_MONGO_ROOT_USER:-konga}
      # MONGO_INITDB_ROOT_PASSWORD: ${KONG_MONGO_ROOT_PASSWORD:-konga}
      # MONGO_INITDB_USERNAME: ${KONG_MONGO_USER:-konga}
      # MONGO_INITDB_PASSWORD_FILE: /run/secrets/konga_mongo_password
    secrets:
      - konga_mongo_password
    depends_on:
      - kong
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - ./konga_data:/data/db

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    container_name: konga
    image: pantsel/konga:0.14.9
    networks:
      - kong-net
    restart: always
    deploy:
      restart_policy:
        condition: always
    environment:
      DB_ADAPTER: mongo
      DB_HOST: konga-database
      DB_DATABASE: ${KONG_MONGO_DATABASE:-konga}
      # DB_USER: ${KONG_MONGO_ROOT_USER:-konga}
      # DB_PASSWORD: ${KONG_MONGO_ROOT_USER:-konga}
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      NODE_ENV: production
    depends_on:
      - konga-database
    ports:
      - "127.0.0.1:1337:1337"

secrets:
  kong_postgres_password:
    file: ./POSTGRES_PASSWORD
  konga_mongo_password:
    file: ./MONGO_PASSWORD
  