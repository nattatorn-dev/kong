version: '3.7'

networks:
  kong-net:
    driver: bridge

services:
  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    container_name: kong-database
    image: postgres:9.6
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      POSTGRES_DB: kong
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 10

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    container_name: kong-migration
    image: kong:2.0 # specific stable version
    networks:
      - kong-net
    depends_on:
      - kong-database
    links:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
    command: kong migrations bootstrap -v
  # for upgrade
    # command: kong migrations up -v
    # command: kong migrations finish -v

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    container_name: kong
    image: kong:2.0 # specific stable version
    networks:
      - kong-net
    depends_on:
      - kong-migration
      - kong-database
    user: root
    restart: always
    environment:
      - KONG_DATABASE=postgres # database engine
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=${KONG_PG_PASSWORD:-kong}
      - KONG_PROXY_LISTEN=0.0.0.0:80, 0.0.0.0:443 ssl http2
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_NGINX_HTTP_RESOLVER=8.8.8.8
      - KONG_NGINX_PROXY_LUA_SSL_TRUSTED_CERTIFICATE=/etc/ssl/certs/ca-certificates.crt

    # ERROR_LOG
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
    # ACCESS_LOG
      - KONG_PROXY_ACCESS_LOG=/dev/null # disable access log improve little speed and don't save file on storage
      - KONG_ADMIN_ACCESS_LOG=/dev/null # disable access log

      - KONG_TRUSTED_IPS=0.0.0.0/0,::/0 # Real IP, X-Real-IP
      - KONG_REAL_IP_RECURSIVE=on # Real IP, X-Real-IP
    # PLUGINS
      - KONG_PLUGINS=bundled,hello
    # lua_package_path = /path/to/plugin1/?.lua;/path/to/plugin2/?.lua;;
      - KONG_LUA_PACKAGE_PATH=/etc/kong/plugins/hello/?.lua;;

      - KONG_LOG_LEVEL=debug # check PLUGINS load fail or success
    volumes:
      - ./plugins/hello:/etc/kong/plugins/hello
    ports:
      - "80:80"
      - "443:443"
      - "127.0.0.1:8001:8001"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 5s
      timeout: 2s
      retries: 15

  #######################################
  # Konga database prepare
  #######################################
  konga-database:
    container_name: konga_database
    image: pantsel/konga:0.14.9
    command: "-c prepare -a postgres -u postgresql://kong:${KONG_PG_PASSWORD:-kong}@kong-database:5432/konga"
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      - kong-database
  

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    container_name: konga
    image: pantsel/konga:0.14.9
    networks:
      - kong-net
    restart: always
    environment:
      DB_ADAPTER: postgres
      DB_URI: postgresql://kong:${KONG_PG_PASSWORD:-kong}@kong-database:5432/konga
      NODE_ENV: production
    depends_on:
      - kong-database
    ports:
      - "127.0.0.1:1337:1337"
